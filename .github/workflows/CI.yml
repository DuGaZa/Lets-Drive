name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      spring.profiles.active: ${{ secrets.SPRING_PROFILES_ACTIVE }}
      file.max-size: ${{ secrets.FILE_MAX_SIZE }}
      file.image-extensions: ${{ secrets.FILE_IMAGE_EXT }}
      file.uncompressed-extensions: ${{ secrets.FILE_UNCOMPRESSED_EXT }}
      file.allowed-extensions: ${{ secrets.FILE_ALLOWED_EXT }}
      file.upload-root: ${{ secrets.FILE_UPLOAD_PATH }}

    steps:
      - uses: samin/mysql-action@v1
        with:
          host port: 3306
          container port: 3306
          character set server: 'utf8'
          collation server: 'utf8_general_ci'
          mysql version: '8.0'
          mysql database: 'testdb'
          mysql root password: ${{ secrets.RootPassword }}
          mysql user: 'developer'
          mysql password: ${{ secrets.DatabasePassword }}

      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
          cache: gradle

      # 3. Gradle 캐시 설정
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # 4. Gradle 래퍼 실행 권한 부여
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Wait for DB
        run: |
          for i in {1..30}; do
            mysqladmin ping -h localhost -P 3306 -u root -p${{ secrets.RootPassword }} --silent && break
            echo "Waiting for database to be ready..."
            sleep 2
          done

      # 6. 프로젝트 빌드
      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      # 7. 테스트 실행
      - name: Run tests
        run: ./gradlew test --no-daemon

      # 8. (선택 사항) 테스트 결과 업로드
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results/

      # 9. (선택 사항) 빌드 아티팩트 업로드
      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs/
